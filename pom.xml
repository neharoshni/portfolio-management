<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.neharoshni</groupId>
    <artifactId>portfolio-management</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Distributed Processing Demo</name>
    <description>Distributed Processing Demo</description>
    <url>https://github.com/demo</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <snakeyaml.version>2.2</snakeyaml.version>
        <spring-cloud.version>2022.0.3</spring-cloud.version>
        <springdoc.openapi-starter-webmvc-ui>2.2.0</springdoc.openapi-starter-webmvc-ui>
        <spring.boot-starter-data-redis>2.7.2</spring.boot-starter-data-redis>
        <maven.compiler.version>3.8.0</maven.compiler.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.verbose>true</maven.compiler.verbose>
        <maven.surefire.plugin.version>3.1.2</maven.surefire.plugin.version>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <spring-kafka.version>3.0.12</spring-kafka.version>
        <junit-jupiter-api.version>5.10.0</junit-jupiter-api.version>
        <snakeyaml.version>2.2</snakeyaml.version>
        <spring-boot-starter-parent.version>3.1.5</spring-boot-starter-parent.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <loki-logback-appender.version>1.4.2</loki-logback-appender.version>
        <logbook-spring-boot-starter.version>3.6.0</logbook-spring-boot-starter.version>
        <logbook-okhttp.version>3.6.0</logbook-okhttp.version>
        <micrometer-core.version>1.12.0</micrometer-core.version>
        <postgresql.version>42.6.1</postgresql.version>
        <h2.version>2.2.220</h2.version>
        <spring-boot-starter-actuator.version>3.1.5</spring-boot-starter-actuator.version>
        <micrometer-observation.version>1.11.5</micrometer-observation.version>
        <micrometer-tracing-bridge-brave.version>1.1.6</micrometer-tracing-bridge-brave.version>
        <datasource-micrometer-spring-boot.version>1.0.2</datasource-micrometer-spring-boot.version>
        <brave.version>5.15.1</brave.version>
        <zipkin-reporter-brave.version>2.16.3</zipkin-reporter-brave.version>
        <micrometer-registry-prometheus.version>1.12.0</micrometer-registry-prometheus.version>
        <zipkin-sender-okhttp3.version>2.16.3</zipkin-sender-okhttp3.version>
        <brave-instrumentation-okhttp3.version>5.15.1</brave-instrumentation-okhttp3.version>
        <okhttp.version>4.12.0</okhttp.version>
        <brave-context-slf4j.version>5.15.1</brave-context-slf4j.version>
        <spring-cloud-starter-netflix-eureka-client.version>4.0.2</spring-cloud-starter-netflix-eureka-client.version>
        <spring-boot-admin-starter-server.version>3.1.8</spring-boot-admin-starter-server.version>
        <spring-boot-admin-starter-client.version>3.1.8</spring-boot-admin-starter-client.version>
        <logback-classic.version>1.4.12</logback-classic.version>
        <spring-boot-starter-thymeleaf.version>3.2.0</spring-boot-starter-thymeleaf.version>
        <keycloak-admin-client.version>23.0.1</keycloak-admin-client.version>
        <java-jwt.version>4.4.0</java-jwt.version>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.5</version>
        <relativePath/>
    </parent>

    <modules>
        <module>modules/commons</module>
        <module>modules/service-registry</module>
        <module>modules/api-gateway</module>
        <module>modules/spring-admin</module>
        <module>modules/auth-service</module>
        <module>modules/ticker-service</module>
        <module>modules/order-service</module>
        <module>modules/producer-service</module>
        <module>modules/producer</module>
        <module>modules/consumer</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>2022.0.3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <artifactId>junit-jupiter-api</artifactId>
                        <groupId>org.junit.jupiter</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>opentest4j</artifactId>
                        <groupId>org.opentest4j</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring-boot-starter-parent.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring.boot-starter-data-redis}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring-kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter-api.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot-starter-parent.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-thymeleaf</artifactId>
                <version>${spring-boot-starter-thymeleaf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.openapi-starter-webmvc-ui}</version>
            </dependency>
            <dependency>
                <groupId>io.github.neharoshni</groupId>
                <artifactId>portfolio-management-commons</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-boot-starter-actuator.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback-classic.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.loki4j</groupId>
                <artifactId>loki-logback-appender</artifactId>
                <version>${loki-logback-appender.version}</version>
            </dependency>
            <dependency>
                <groupId>org.zalando</groupId>
                <artifactId>logbook-spring-boot-starter</artifactId>
                <version>${logbook-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.zalando</groupId>
                <artifactId>logbook-okhttp</artifactId>
                <version>${logbook-okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-core</artifactId>
                <version>${micrometer-core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-observation</artifactId>
                <version>${micrometer-observation.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-tracing-bridge-brave</artifactId>
                <version>${micrometer-tracing-bridge-brave.version}</version>
            </dependency>
            <dependency>
                <groupId>net.ttddyy.observation</groupId>
                <artifactId>datasource-micrometer-spring-boot</artifactId>
                <version>${datasource-micrometer-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.brave</groupId>
                <artifactId>brave</artifactId>
                <version>${brave.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.reporter2</groupId>
                <artifactId>zipkin-reporter-brave</artifactId>
                <version>${zipkin-reporter-brave.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer-registry-prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.reporter2</groupId>
                <artifactId>zipkin-sender-okhttp3</artifactId>
                <version>${zipkin-sender-okhttp3.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.brave</groupId>
                <artifactId>brave-instrumentation-okhttp3</artifactId>
                <version>${brave-instrumentation-okhttp3.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.brave</groupId>
                <artifactId>brave-context-slf4j</artifactId>
                <version>${brave-context-slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                <version>${spring-cloud-starter-netflix-eureka-client.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${spring-boot-admin-starter-server.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${spring-boot-admin-starter-client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.keycloak</groupId>
                <artifactId>keycloak-admin-client</artifactId>
                <version>${keycloak-admin-client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java-jwt.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                    <verbose>true</verbose>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <configuration>
                    <argLine>--enable-preview</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
    </repositories>

    <pluginRepositories>
    </pluginRepositories>
</project>
