eureka:
  client:
    fetch-registry: false
    register-with-eureka: false
  instance:
    lease-renewal-interval-in-seconds: 0
  renewalPercentThreshold: 0.49
  server:
    enableSelfPreservation: false
    max-threads-for-peer-replication: 0
    wait-time-in-ms-when-sync-empty: 0
logbook:
  predicate:
    exclude[0]:
      path: /actuator/**
logging:
  file:
    name: ${spring.application.home:.}/logs/${spring.application.name}.log
  level:
    com.netflix.discovery: false
management:
  endpoint:
    configprops:
      show-values: ALWAYS
    env:
      show-values: ALWAYS
    health:
      show-details: ALWAYS
    metrics:
      enabled: true
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: '*'
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    distribution:
      endpoint: ${TRACER_HOST:http://localhost:9411}/api/v2/spans
      percentiles-histogram:
        http:
          client:
            requests: true
          requests: true
          server:
            requests: true
        tracing: null
    tags:
      application: ${spring.application.name}
      profiles: ${spring.profiles.active}
  observations:
    key-values:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        step: 10s
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: ${TRACER_HOST:http://localhost:9411}/api/v2/spans
server:
  port: 9900
spring:
  application:
    name: service-registry
  boot:
    admin:
      client:
        url: ${SPRING_ADMIN_HOST:http://localhost:9800}
  datasource:
    driver-class-name: org.h2.Driver
    password: password
    url: jdbc:h2:mem:batchjobs;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL
    username: sa
