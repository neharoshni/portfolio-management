eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:9900/eureka}
  instance:
    instanceId: ${spring.application.name}-${random.uuid}
    preferIpAddress: true
infrastructure:
  kafka_brokers: ${INFRA_KAFKA_BROKERS:localhost:9092}
  redis:
    host: ${INFRA_REDIS_HOST:locahost}
    keys:
      indices: indices
      portfolio: portfolio
      stocks: stocks
    port: ${INFRA_REDIS_PORT:6379}
  topics:
    orders-placed: orders
    price-changes: stock-prices
logbook:
  predicate:
    exclude[0]:
      path: /actuator/**
logging:
  file:
    name: ${spring.application.home:.}/logs/${spring.application.name}.log
  level:
    com.netflix.discovery: false
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
management:
  endpoint:
    env:
      health:
        show-details: ALWAYS
      show-values: ALWAYS
    metrics:
      enabled: true
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: '*'
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http:
          client:
            requests: true
          requests: true
          server:
            requests: true
    tracing:
      endpoint: ${TRACER_HOST:http://localhost:9411}/api/v2/spans
  observations:
    key-values:
      application: ${spring.application.name}
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: ${TRACER_HOST:http://localhost:9411}/api/v2/spans
producer:
  stock-instruments: GOOGL,AAPL,TSLA,NVDA,AMD,AMZN,INTC,MSFT,UBER,ADBE,CSCO
server:
  port: 9905
spring:
  application:
    name: consumer
  batch:
    jdbc:
      initialize-schema: always
  boot:
    admin:
      client:
        url: ${SPRING_ADMIN_HOST:http://localhost:9800}
  datasource:
    driver-class-name: org.postgresql.Driver
    password: root
    url: jdbc:postgresql://${INFRA_POSTGRES_HOST:localhost}:${INFRA_POSTGRES_PORT:5432}/stocks
    username: root
  datasource-batch:
    driver-class-name: org.h2.Driver
    initialization-mode: always
    password: password
    url: jdbc:h2:mem:batchjobs;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL
    username: sa
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  main:
    allow-bean-definition-overriding: true
springdoc:
  swagger-ui:
    path: /docs
    tryItOutEnabled: true
